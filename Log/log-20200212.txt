{"@t":"2020-02-12T10:47:13.5061127Z","@m":"Request starting HTTP/1.1 GET http://localhost:30796/  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:30796/  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2I:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2I"}
{"@t":"2020-02-12T10:47:13.5061127Z","@m":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"DEBUG","ContentType":null,"ContentLength":0,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2J:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2J"}
{"@t":"2020-02-12T10:47:13.5457159Z","@m":"Request finished in 53.7917ms 200 ","@i":"791a596a","ElapsedMilliseconds":53.791700000000006,"StatusCode":200,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 53.7917ms 200 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2J:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2J"}
{"@t":"2020-02-12T10:47:13.6317888Z","@m":"Request finished in 145.3885ms 404 ","@i":"791a596a","ElapsedMilliseconds":145.3885,"StatusCode":404,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 145.3885ms 404 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2I:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2I"}
{"@t":"2020-02-12T10:48:16.6970601Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2K:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:16.7324876Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2K:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:16.7348196Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2K:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:16.7465657Z","@m":"Request finished in 51.2109ms 204 ","@i":"791a596a","ElapsedMilliseconds":51.2109,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 51.2109ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2K:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:20.6318179Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2K:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:20.6343261Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2K:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:20.6364117Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2K:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:20.6432144Z","@m":"Request finished in 6.9453ms 204 ","@i":"791a596a","ElapsedMilliseconds":6.9453000000000005,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 6.9453ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2K:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.3545962Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2K:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.3569643Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2K:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.3590507Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2K:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.3612897Z","@m":"Request finished in 6.9166ms 204 ","@i":"791a596a","ElapsedMilliseconds":6.9166000000000007,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 6.9166ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2K:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.3653257Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/x-www-form-urlencoded; charset=UTF-8 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/x-www-form-urlencoded; charset=UTF-8","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/x-www-form-urlencoded; charset=UTF-8 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2K:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.3675540Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2K:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.3699042Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2K:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.3871161Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2K:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.4286384Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2K:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.8241759Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2K:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.8864434Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 452.9291ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":452.9291,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2K:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.8885934Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2K:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:48:56.8924202Z","@m":"Request finished in 526.7003ms 415 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":526.7003,"StatusCode":415,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 526.7003ms 415 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2K:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6173412Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2K:00000005","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6191094Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2K:00000005","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6212540Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2K:00000005","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6233838Z","@m":"Request finished in 5.9087ms 204 ","@i":"791a596a","ElapsedMilliseconds":5.9087000000000005,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 5.9087ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2K:00000005","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6310440Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/x-www-form-urlencoded; charset=UTF-8 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/x-www-form-urlencoded; charset=UTF-8","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/x-www-form-urlencoded; charset=UTF-8 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2K:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6331709Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2K:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6351247Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2K:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6395583Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2K:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6428389Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2K:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6467502Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2K:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6490162Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 4.2417ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":4.2417,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2K:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6507306Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2K:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:49:02.6529426Z","@m":"Request finished in 21.5962ms 415 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":21.5962,"StatusCode":415,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 21.5962ms 415 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2K:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2K"}
{"@t":"2020-02-12T10:50:06.9205912Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2L:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:06.9233239Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2L:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:06.9252205Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2L:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:06.9276851Z","@m":"Request finished in 9.5846ms 204 ","@i":"791a596a","ElapsedMilliseconds":9.5846,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 9.5846ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2L:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:06.9347702Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2L:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:06.9389068Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2L:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:06.9410498Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2L:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:06.9434244Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2L:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:06.9454017Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2L:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:07.0198627Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2L:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:07.0270789Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 79.6155ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":79.6155,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2L:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:07.0288579Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2L:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:07.0309806Z","@m":"Request finished in 97.9301ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":97.93010000000001,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 97.9301ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2L:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0106923Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2L:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0126504Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2L:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0147304Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2L:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0169059Z","@m":"Request finished in 6.0757ms 204 ","@i":"791a596a","ElapsedMilliseconds":6.0757,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 6.0757ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2L:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0230954Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2L:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0260147Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2L:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0287285Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2L:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0307052Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2L:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0328251Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2L:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0702811Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2L:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0725682Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 37.692ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":37.692,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2L:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0746684Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2L:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:50:09.0768766Z","@m":"Request finished in 54.8845ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":54.8845,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 54.8845ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2L:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2L"}
{"@t":"2020-02-12T10:51:54.5969392Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2M:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:51:54.5989746Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2M:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:51:54.6010545Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2M:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:51:54.6034374Z","@m":"Request finished in 6.3158ms 204 ","@i":"791a596a","ElapsedMilliseconds":6.3158,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 6.3158ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2M:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:51:56.9864681Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2M:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:51:56.9882948Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2M:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:51:56.9902861Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2M:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:51:56.9923475Z","@m":"Request finished in 5.6111ms 204 ","@i":"791a596a","ElapsedMilliseconds":5.6111,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 5.6111ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2M:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.5777141Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2M:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.5795986Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2M:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.5826682Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2M:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.5856164Z","@m":"Request finished in 7.1004ms 204 ","@i":"791a596a","ElapsedMilliseconds":7.1004000000000005,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 7.1004ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2M:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.5934324Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2M:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.5954989Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2M:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.5975160Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2M:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.5998541Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2M:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.6019927Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2M:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.6363577Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2M:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.6383060Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 34.5709ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":34.5709,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2M:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.6401559Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2M:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:18.6419271Z","@m":"Request finished in 48.8794ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":48.879400000000004,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 48.8794ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2M:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:20.9791934Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2M:00000005","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:20.9810791Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2M:00000005","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:20.9828520Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2M:00000005","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:20.9850320Z","@m":"Request finished in 5.8542ms 204 ","@i":"791a596a","ElapsedMilliseconds":5.8542000000000005,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 5.8542ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2M:00000005","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:20.9943272Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2M:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:20.9965622Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2M:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:20.9993644Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2M:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:21.0012993Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2M:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:21.0031516Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2M:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:21.0333628Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2M:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:21.0351889Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 30.4382ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":30.438200000000002,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2M:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:21.0367732Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2M:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:52:21.0385044Z","@m":"Request finished in 45.0182ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":45.0182,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 45.0182ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2M:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2M"}
{"@t":"2020-02-12T10:53:33.0813225Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2N:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:53:33.0835673Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2N:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:53:33.0858104Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2N:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:53:33.0886833Z","@m":"Request finished in 6.7178ms 204 ","@i":"791a596a","ElapsedMilliseconds":6.7178,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 6.7178ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2N:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:53:33.0954284Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2N:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:53:33.0974607Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2N:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:53:33.0995802Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2N:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:53:33.1015896Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2N:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:53:33.1038299Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2N:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:53:33.1430562Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2N:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:53:33.1449487Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 39.4238ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":39.4238,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2N:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:53:33.1472979Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2N:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:53:33.1500212Z","@m":"Request finished in 54.3988ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":54.3988,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 54.3988ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2N:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2N"}
{"@t":"2020-02-12T10:58:44.2985953Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2O:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:44.3012991Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2O:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:44.3029492Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2O:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:44.3050163Z","@m":"Request finished in 6.5632ms 204 ","@i":"791a596a","ElapsedMilliseconds":6.5632,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 6.5632ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2O:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:44.3138364Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2O:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:44.3165294Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2O:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:44.3183776Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2O:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:44.3205367Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2O:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:44.3223509Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2O:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:44.3538430Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2O:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:44.3558022Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 31.7029ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":31.702900000000003,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2O:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:44.3580218Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2O:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:44.3602931Z","@m":"Request finished in 46.6854ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":46.6854,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 46.6854ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2O:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8036252Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2O:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8052338Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2O:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8068313Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2O:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8087128Z","@m":"Request finished in 5.1706ms 204 ","@i":"791a596a","ElapsedMilliseconds":5.1706,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 5.1706ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2O:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8142682Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2O:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8159689Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2O:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8176254Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2O:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8194346Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2O:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8211749Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2O:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8518575Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2O:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8540310Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 30.7896ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":30.7896,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2O:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8574162Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2O:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T10:58:45.8594820Z","@m":"Request finished in 45.8937ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":45.8937,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 45.8937ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2O:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2O"}
{"@t":"2020-02-12T11:01:02.0894693Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:02.0916783Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:02.0935830Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:02.0956109Z","@m":"Request finished in 6.2863ms 204 ","@i":"791a596a","ElapsedMilliseconds":6.2863000000000007,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 6.2863ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:02.1289536Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:02.1307372Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:02.1325058Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:02.1339876Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2P:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:02.1357531Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2P:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:02.1691075Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2P:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:02.1710035Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 33.4914ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":33.4914,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2P:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:02.1728365Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2P:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:02.1750073Z","@m":"Request finished in 45.9674ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":45.967400000000005,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 45.9674ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.5964528Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.5982903Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.6000311Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.6019402Z","@m":"Request finished in 5.6706ms 204 ","@i":"791a596a","ElapsedMilliseconds":5.6706,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 5.6706ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000003","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.6055690Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.6072993Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.6088541Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.6108691Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2P:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.6133079Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2P:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.6447204Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2P:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.6464632Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 31.5841ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":31.584100000000003,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2P:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.6483072Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2P:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:03.6508106Z","@m":"Request finished in 44.5768ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":44.5768,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 44.5768ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000004","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.3349892Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000005","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.3370529Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000005","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.3391039Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000005","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.3413771Z","@m":"Request finished in 6.3934ms 204 ","@i":"791a596a","ElapsedMilliseconds":6.3934000000000006,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 6.3934ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000005","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.3594273Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.3612219Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.3628873Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.3646401Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2P:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.3665119Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2P:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.4055592Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2P:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.4073454Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 39.1498ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":39.1498,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2P:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.4090323Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2P:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:18.4113529Z","@m":"Request finished in 51.5684ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":51.568400000000004,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 51.5684ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000006","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4025580Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000007","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4045658Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000007","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4065295Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000007","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4082115Z","@m":"Request finished in 5.9085ms 204 ","@i":"791a596a","ElapsedMilliseconds":5.9085,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 5.9085ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000007","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4134738Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000008","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4156673Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000008","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4173842Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000008","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4189547Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2P:00000008","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4209846Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2P:00000008","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4544994Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2P:00000008","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4562536Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 33.6776ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":33.6776,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2P:00000008","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4581549Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2P:00000008","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:20.4600612Z","@m":"Request finished in 47.415ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":47.415,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 47.415ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000008","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3286104Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000009","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3302405Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000009","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3317990Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:00000009","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3336444Z","@m":"Request finished in 5.4455ms 204 ","@i":"791a596a","ElapsedMilliseconds":5.4455,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 5.4455ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:00000009","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3363830Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:0000000A","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3384746Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:0000000A","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3407488Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:0000000A","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3425578Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2P:0000000A","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3447740Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2P:0000000A","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3802230Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2P:0000000A","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3821534Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 35.6452ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":35.6452,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2P:0000000A","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3840595Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2P:0000000A","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:29.3859599Z","@m":"Request finished in 49.6095ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":49.609500000000004,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 49.6095ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:0000000A","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.5846215Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:0000000B","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.5864415Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:0000000B","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.5879979Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:0000000B","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.5900227Z","@m":"Request finished in 5.4649ms 204 ","@i":"791a596a","ElapsedMilliseconds":5.4649,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 5.4649ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:0000000B","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.5953177Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:0000000C","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.5969589Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:0000000C","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.5984045Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFL3LLDN2P:0000000C","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.6000736Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2P:0000000C","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.6018613Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2P:0000000C","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.6320603Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFL3LLDN2P:0000000C","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.6337586Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 30.3275ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":30.3275,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"7bfd2cf3-80a9-464f-9e59-27d600d5a115","RequestId":"0HLTFL3LLDN2P:0000000C","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.6353371Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFL3LLDN2P:0000000C","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:01:31.6371216Z","@m":"Request finished in 41.8127ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":41.8127,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 41.8127ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFL3LLDN2P:0000000C","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFL3LLDN2P"}
{"@t":"2020-02-12T11:02:26.8400792Z","@m":"Request starting HTTP/1.1 GET http://localhost:30796/  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:30796/  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLC5RAOHU:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHU"}
{"@t":"2020-02-12T11:02:26.8400792Z","@m":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"DEBUG","ContentType":null,"ContentLength":0,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLC5RAOHT:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHT"}
{"@t":"2020-02-12T11:02:26.9041696Z","@m":"Request finished in 107.8998ms 200 ","@i":"791a596a","ElapsedMilliseconds":107.8998,"StatusCode":200,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 107.8998ms 200 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLC5RAOHT:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHT"}
{"@t":"2020-02-12T11:02:26.9793735Z","@m":"Request finished in 183.8869ms 404 ","@i":"791a596a","ElapsedMilliseconds":183.8869,"StatusCode":404,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 183.8869ms 404 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLC5RAOHU:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHU"}
{"@t":"2020-02-12T11:02:29.0105460Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLC5RAOHT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHT"}
{"@t":"2020-02-12T11:02:29.0156093Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLC5RAOHT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHT"}
{"@t":"2020-02-12T11:02:29.0244887Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLC5RAOHT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHT"}
{"@t":"2020-02-12T11:02:29.0284846Z","@m":"Request finished in 17.14ms 204 ","@i":"791a596a","ElapsedMilliseconds":17.14,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 17.14ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLC5RAOHT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHT"}
{"@t":"2020-02-12T11:02:29.0351620Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":69,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 69","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLC5RAOHU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHU"}
{"@t":"2020-02-12T11:02:29.0385374Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLC5RAOHU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHU"}
{"@t":"2020-02-12T11:02:29.0407880Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLC5RAOHU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHU"}
{"@t":"2020-02-12T11:02:29.0595444Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLC5RAOHU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHU"}
{"@t":"2020-02-12T11:02:29.1038673Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"bc8a50c6-5ffc-4d40-b4bc-c136290927fb","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLC5RAOHU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHU"}
{"@t":"2020-02-12T11:02:29.3934106Z","@m":"Executing action method \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" - Validation state: Valid","@i":"dad538d7","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"bc8a50c6-5ffc-4d40-b4bc-c136290927fb","RequestId":"0HLTFLC5RAOHU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHU"}
{"@t":"2020-02-12T11:03:29.7319213Z","@m":"The property '\"Id\"' on entity type '\"ActivityCheckType\"' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@i":"316a401d","@l":"Warning","property":"Id","entityType":"ActivityCheckType","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"bc8a50c6-5ffc-4d40-b4bc-c136290927fb","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLC5RAOHU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHU"}
{"@t":"2020-02-12T11:03:29.7337962Z","@m":"The property '\"Id\"' on entity type '\"ActivityType\"' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@i":"316a401d","@l":"Warning","property":"Id","entityType":"ActivityType","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"bc8a50c6-5ffc-4d40-b4bc-c136290927fb","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLC5RAOHU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHU"}
{"@t":"2020-02-12T11:03:29.7898288Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WizdiContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WizdiContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"bc8a50c6-5ffc-4d40-b4bc-c136290927fb","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLC5RAOHU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLC5RAOHU"}
{"@t":"2020-02-12T11:03:42.5440084Z","@m":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"DEBUG","ContentType":null,"ContentLength":0,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3FU:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FU"}
{"@t":"2020-02-12T11:03:42.5440084Z","@m":"Request starting HTTP/1.1 GET http://localhost:30796/  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:30796/  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3FT:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:03:42.5872840Z","@m":"Request finished in 62.5287ms 200 ","@i":"791a596a","ElapsedMilliseconds":62.5287,"StatusCode":200,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 62.5287ms 200 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3FU:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FU"}
{"@t":"2020-02-12T11:03:42.6759316Z","@m":"Request finished in 153.8025ms 404 ","@i":"791a596a","ElapsedMilliseconds":153.8025,"StatusCode":404,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 153.8025ms 404 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3FT:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:03:55.2775013Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3FU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FU"}
{"@t":"2020-02-12T11:03:55.2833615Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLCSDN3FU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FU"}
{"@t":"2020-02-12T11:03:55.2859556Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLCSDN3FU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FU"}
{"@t":"2020-02-12T11:03:55.2889306Z","@m":"Request finished in 11.5913ms 204 ","@i":"791a596a","ElapsedMilliseconds":11.5913,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 11.5913ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3FU:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FU"}
{"@t":"2020-02-12T11:03:55.2921214Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 65","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":65,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 65","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:03:55.2938849Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:03:55.2957756Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:03:55.3051765Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:03:55.3415171Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:03:55.7186834Z","@m":"Executing action method \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" - Validation state: Valid","@i":"dad538d7","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:04:05.0912628Z","@m":"The property '\"Id\"' on entity type '\"ActivityCheckType\"' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@i":"316a401d","@l":"Warning","property":"Id","entityType":"ActivityCheckType","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:04:05.0931090Z","@m":"The property '\"Id\"' on entity type '\"ActivityType\"' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@i":"316a401d","@l":"Warning","property":"Id","entityType":"ActivityType","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:04:05.1404558Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WizdiContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WizdiContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:04:29.7084428Z","@m":"An error occurred using the connection to database '\"wizdi_preprod\"' on server '\"USER9-PC\"'.","@i":"5fc3407c","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server) ---> System.ComponentModel.Win32Exception (2): The system cannot find the file specified\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\nClientConnectionId:00000000-0000-0000-0000-000000000000\r\nError Number:2,State:0,Class:20","database":"wizdi_preprod","server":"USER9-PC","EventId":{"Id":20004,"Name":"Microsoft.EntityFrameworkCore.Database.Connection.ConnectionError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Connection","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:04:30.2063101Z","@m":"An exception occurred while iterating over the results of a query for context type '\"WizdiDataEntities.WizdiEntities.WizdiContext\"'.\"\r\n\"\"System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server) ---> System.ComponentModel.Win32Exception (2): The system cannot find the file specified\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\First.cs:line 144\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)\r\nClientConnectionId:00000000-0000-0000-0000-000000000000\r\nError Number:2,State:0,Class:20\"","@i":"f5c7ac34","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server) ---> System.ComponentModel.Win32Exception (2): The system cannot find the file specified\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\First.cs:line 144\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)\r\nClientConnectionId:00000000-0000-0000-0000-000000000000\r\nError Number:2,State:0,Class:20","contextType":"WizdiDataEntities.WizdiEntities.WizdiContext","newline":"\r\n","error":"System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server) ---> System.ComponentModel.Win32Exception (2): The system cannot find the file specified\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\First.cs:line 144\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)\r\nClientConnectionId:00000000-0000-0000-0000-000000000000\r\nError Number:2,State:0,Class:20","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:04:30.3089299Z","@m":"An exception occurred while iterating over the results of a query for context type '\"WizdiDataEntities.WizdiEntities.WizdiContext\"'.\"\r\n\"\"System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server) ---> System.ComponentModel.Win32Exception (2): The system cannot find the file specified\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\First.cs:line 144\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)\r\nClientConnectionId:00000000-0000-0000-0000-000000000000\r\nError Number:2,State:0,Class:20\"","@i":"f5c7ac34","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server) ---> System.ComponentModel.Win32Exception (2): The system cannot find the file specified\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\First.cs:line 144\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)\r\n   at WizdiWizdiDataEntities.Repositories.UserRepository.GetUserIncludeRoleAsync(String UserName, String Password) in D:\\wwwroot\\WizdiDataEntities\\Repositories\\UserRepository.cs:line 20\r\nClientConnectionId:00000000-0000-0000-0000-000000000000\r\nError Number:2,State:0,Class:20","contextType":"WizdiDataEntities.WizdiEntities.WizdiContext","newline":"\r\n","error":"System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server) ---> System.ComponentModel.Win32Exception (2): The system cannot find the file specified\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\First.cs:line 144\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)\r\nClientConnectionId:00000000-0000-0000-0000-000000000000\r\nError Number:2,State:0,Class:20","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:04:31.0350495Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 35689.3475ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":35689.3475,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:04:31.1176174Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:04:31.5235489Z","@m":"An unhandled exception has occurred while executing the request.","@i":"48a46595","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server) ---> System.ComponentModel.Win32Exception (2): The system cannot find the file specified\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.BufferlessMoveNext(DbContext _, Boolean buffer, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable`1.AsyncEnumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at System.Linq.AsyncEnumerable.FirstOrDefault_[TSource](IAsyncEnumerable`1 source, CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\First.cs:line 144\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TaskResultAsyncEnumerable`1.Enumerator.MoveNext(CancellationToken cancellationToken)\r\n   at System.Linq.AsyncEnumerable.SelectEnumerableAsyncIterator`2.MoveNextCore(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\Select.cs:line 106\r\n   at System.Linq.AsyncEnumerable.AsyncIterator`1.MoveNext(CancellationToken cancellationToken) in D:\\a\\1\\s\\Ix.NET\\Source\\System.Interactive.Async\\AsyncIterator.cs:line 98\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext(CancellationToken cancellationToken)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteSingletonAsyncQuery[TResult](QueryContext queryContext, Func`2 compiledQuery, IDiagnosticsLogger`1 logger, Type contextType)\r\n   at WizdiWizdiDataEntities.Repositories.UserRepository.GetUserIncludeRoleAsync(String UserName, String Password) in D:\\wwwroot\\WizdiDataEntities\\Repositories\\UserRepository.cs:line 20\r\n   at JwtWebTokenSerice.Services.UserService.Authenticate(String Username, String Password) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Services\\UserService.cs:line 37\r\n   at JwtWebTokenSerice.Controllers.TokenController.Get(User UserParam) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Controllers\\TokenController.cs:line 45\r\n   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)\r\n   at StackifyMiddleware.RequestTracerMiddleware.InvokeAsync(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\nClientConnectionId:00000000-0000-0000-0000-000000000000\r\nError Number:2,State:0,Class:20","EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:04:31.5632398Z","@m":"Request finished in 36270.7804ms 500 text/html; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":36270.7804,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 36270.7804ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3FT:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FT"}
{"@t":"2020-02-12T11:06:14.0287857Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3FV:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:14.0310122Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLCSDN3FV:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:14.0331109Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLCSDN3FV:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:14.0356967Z","@m":"Request finished in 6.2062ms 204 ","@i":"791a596a","ElapsedMilliseconds":6.2062,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 6.2062ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3FV:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:14.0598258Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 65","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":65,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 65","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:14.0623018Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:14.0643058Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:14.0702543Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:14.0731573Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:14.0769029Z","@m":"Executing action method \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" - Validation state: Valid","@i":"dad538d7","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:27.9543261Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3G0:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:27.9562275Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLCSDN3G0:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:27.9579153Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLCSDN3G0:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:27.9596990Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WizdiContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WizdiContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:27.9615678Z","@m":"Request finished in 9.3031ms 204 ","@i":"791a596a","ElapsedMilliseconds":9.3031,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 9.3031ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3G0:00000001","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:27.9657341Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 65","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":65,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 65","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:27.9682509Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:27.9738822Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:27.9757362Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:27.9777612Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:27.9813956Z","@m":"Executing action method \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" - Validation state: Valid","@i":"dad538d7","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:29.7820557Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WizdiContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WizdiContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:29.9831837Z","@m":"Executed DbCommand (\"137\"ms) [Parameters=[\"@__UserName_0='?' (Size = 50), @__Password_1='?' (Size = 512)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [x].[ID], [x].[AboutMySelf], [x].[Age], [x].[AvatarUrl], [x].[BirthDate], [x].[City], [x].[CountryID], [x].[CreateDate], [x].[CreditBalance], [x].[CurrentPackID], [x].[CurrentStorage], [x].[DeleteDate], [x].[Description], [x].[DisableAccountByUser], [x].[EduSub], [x].[EduUser], [x].[Email], [x].[EmailNews], [x].[EmailPartners], [x].[EmailSellings], [x].[EmailUpdated], [x].[FaildLoginAttempts], [x].[FavoriteQuote], [x].[FirstName], [x].[Gender], [x].[InternalComment], [x].[IsActive], [x].[LastName], [x].[LegalIdendifier], [x].[LockedUser], [x].[LUserType], [x].[MaxStorage], [x].[MobileNumber], [x].[PackExpirationDate], [x].[Password], [x].[PayPalEmail], [x].[PhoneID], [x].[PreferredFieldOfKnowledgeID], [x].[Rank], [x].[ShortDesc], [x].[StateID], [x].[UpdateDate], [x].[UserMustChangePassword], [x].[Username], [x.LuserTypeNavigation].[ID], [x.LuserTypeNavigation].[Const], [x.LuserTypeNavigation].[CreateDate], [x.LuserTypeNavigation].[DeleteDate], [x.LuserTypeNavigation].[Description], [x.LuserTypeNavigation].[IsActive], [x.LuserTypeNavigation].[LookupOrder], [x.LuserTypeNavigation].[LookupTypeID], [x.LuserTypeNavigation].[UpdateDate], [x.LuserTypeNavigation].[Value]\r\nFROM [User] AS [x]\r\nLEFT JOIN [LookupValue] AS [x.LuserTypeNavigation] ON [x].[LUserType] = [x.LuserTypeNavigation].[ID]\r\nWHERE (((([x].[Username] = @__UserName_0) AND ([x].[Password] = @__Password_1)) AND ([x].[IsActive] = 1)) AND ([x].[LockedUser] = 0)) AND [x].[DeleteDate] IS NULL\"","@i":"0723d8ff","elapsed":"137","parameters":"@__UserName_0='?' (Size = 50), @__Password_1='?' (Size = 512)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT TOP(1) [x].[ID], [x].[AboutMySelf], [x].[Age], [x].[AvatarUrl], [x].[BirthDate], [x].[City], [x].[CountryID], [x].[CreateDate], [x].[CreditBalance], [x].[CurrentPackID], [x].[CurrentStorage], [x].[DeleteDate], [x].[Description], [x].[DisableAccountByUser], [x].[EduSub], [x].[EduUser], [x].[Email], [x].[EmailNews], [x].[EmailPartners], [x].[EmailSellings], [x].[EmailUpdated], [x].[FaildLoginAttempts], [x].[FavoriteQuote], [x].[FirstName], [x].[Gender], [x].[InternalComment], [x].[IsActive], [x].[LastName], [x].[LegalIdendifier], [x].[LockedUser], [x].[LUserType], [x].[MaxStorage], [x].[MobileNumber], [x].[PackExpirationDate], [x].[Password], [x].[PayPalEmail], [x].[PhoneID], [x].[PreferredFieldOfKnowledgeID], [x].[Rank], [x].[ShortDesc], [x].[StateID], [x].[UpdateDate], [x].[UserMustChangePassword], [x].[Username], [x.LuserTypeNavigation].[ID], [x.LuserTypeNavigation].[Const], [x.LuserTypeNavigation].[CreateDate], [x.LuserTypeNavigation].[DeleteDate], [x.LuserTypeNavigation].[Description], [x.LuserTypeNavigation].[IsActive], [x.LuserTypeNavigation].[LookupOrder], [x.LuserTypeNavigation].[LookupTypeID], [x.LuserTypeNavigation].[UpdateDate], [x.LuserTypeNavigation].[Value]\r\nFROM [User] AS [x]\r\nLEFT JOIN [LookupValue] AS [x.LuserTypeNavigation] ON [x].[LUserType] = [x.LuserTypeNavigation].[ID]\r\nWHERE (((([x].[Username] = @__UserName_0) AND ([x].[Password] = @__Password_1)) AND ([x].[IsActive] = 1)) AND ([x].[LockedUser] = 0)) AND [x].[DeleteDate] IS NULL","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:29.9832115Z","@m":"Executed DbCommand (\"137\"ms) [Parameters=[\"@__UserName_0='?' (Size = 50), @__Password_1='?' (Size = 512)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [x].[ID], [x].[AboutMySelf], [x].[Age], [x].[AvatarUrl], [x].[BirthDate], [x].[City], [x].[CountryID], [x].[CreateDate], [x].[CreditBalance], [x].[CurrentPackID], [x].[CurrentStorage], [x].[DeleteDate], [x].[Description], [x].[DisableAccountByUser], [x].[EduSub], [x].[EduUser], [x].[Email], [x].[EmailNews], [x].[EmailPartners], [x].[EmailSellings], [x].[EmailUpdated], [x].[FaildLoginAttempts], [x].[FavoriteQuote], [x].[FirstName], [x].[Gender], [x].[InternalComment], [x].[IsActive], [x].[LastName], [x].[LegalIdendifier], [x].[LockedUser], [x].[LUserType], [x].[MaxStorage], [x].[MobileNumber], [x].[PackExpirationDate], [x].[Password], [x].[PayPalEmail], [x].[PhoneID], [x].[PreferredFieldOfKnowledgeID], [x].[Rank], [x].[ShortDesc], [x].[StateID], [x].[UpdateDate], [x].[UserMustChangePassword], [x].[Username], [x.LuserTypeNavigation].[ID], [x.LuserTypeNavigation].[Const], [x.LuserTypeNavigation].[CreateDate], [x.LuserTypeNavigation].[DeleteDate], [x.LuserTypeNavigation].[Description], [x.LuserTypeNavigation].[IsActive], [x.LuserTypeNavigation].[LookupOrder], [x.LuserTypeNavigation].[LookupTypeID], [x.LuserTypeNavigation].[UpdateDate], [x.LuserTypeNavigation].[Value]\r\nFROM [User] AS [x]\r\nLEFT JOIN [LookupValue] AS [x.LuserTypeNavigation] ON [x].[LUserType] = [x.LuserTypeNavigation].[ID]\r\nWHERE (((([x].[Username] = @__UserName_0) AND ([x].[Password] = @__Password_1)) AND ([x].[IsActive] = 1)) AND ([x].[LockedUser] = 0)) AND [x].[DeleteDate] IS NULL\"","@i":"0723d8ff","elapsed":"137","parameters":"@__UserName_0='?' (Size = 50), @__Password_1='?' (Size = 512)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT TOP(1) [x].[ID], [x].[AboutMySelf], [x].[Age], [x].[AvatarUrl], [x].[BirthDate], [x].[City], [x].[CountryID], [x].[CreateDate], [x].[CreditBalance], [x].[CurrentPackID], [x].[CurrentStorage], [x].[DeleteDate], [x].[Description], [x].[DisableAccountByUser], [x].[EduSub], [x].[EduUser], [x].[Email], [x].[EmailNews], [x].[EmailPartners], [x].[EmailSellings], [x].[EmailUpdated], [x].[FaildLoginAttempts], [x].[FavoriteQuote], [x].[FirstName], [x].[Gender], [x].[InternalComment], [x].[IsActive], [x].[LastName], [x].[LegalIdendifier], [x].[LockedUser], [x].[LUserType], [x].[MaxStorage], [x].[MobileNumber], [x].[PackExpirationDate], [x].[Password], [x].[PayPalEmail], [x].[PhoneID], [x].[PreferredFieldOfKnowledgeID], [x].[Rank], [x].[ShortDesc], [x].[StateID], [x].[UpdateDate], [x].[UserMustChangePassword], [x].[Username], [x.LuserTypeNavigation].[ID], [x.LuserTypeNavigation].[Const], [x.LuserTypeNavigation].[CreateDate], [x.LuserTypeNavigation].[DeleteDate], [x.LuserTypeNavigation].[Description], [x.LuserTypeNavigation].[IsActive], [x.LuserTypeNavigation].[LookupOrder], [x.LuserTypeNavigation].[LookupTypeID], [x.LuserTypeNavigation].[UpdateDate], [x.LuserTypeNavigation].[Value]\r\nFROM [User] AS [x]\r\nLEFT JOIN [LookupValue] AS [x.LuserTypeNavigation] ON [x].[LUserType] = [x.LuserTypeNavigation].[ID]\r\nWHERE (((([x].[Username] = @__UserName_0) AND ([x].[Password] = @__Password_1)) AND ([x].[IsActive] = 1)) AND ([x].[LockedUser] = 0)) AND [x].[DeleteDate] IS NULL","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:30.1968387Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WebTokenIdentityContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WebTokenIdentityContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:30.2184940Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WebTokenIdentityContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WebTokenIdentityContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:30.6091810Z","@m":"Failed executing DbCommand (\"374\"ms) [Parameters=[\"@__userId_0='?' (DbType = Int64)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [x].[Id], [x].[Audience], [x].[BrowserCapabilities], [x].[CreatedDate], [x].[DeletedDate], [x].[ExpirationDate], [x].[IP], [x].[Issuer], [x].[SecurityTypeId], [x].[SystemName], [x].[TokenKey], [x].[UserId], [x].[UserRole]\r\nFROM [Token] AS [x]\r\nWHERE (([x].[UserId] = @__userId_0) AND ([x].[ExpirationDate] >= GETUTCDATE())) AND [x].[DeletedDate] IS NULL\"","@i":"627a98df","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\nClientConnectionId:78e03bfe-a8fe-4d88-bbb6-a6ba82199d53\r\nError Number:208,State:1,Class:16","elapsed":"374","parameters":"@__userId_0='?' (DbType = Int64)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT TOP(1) [x].[Id], [x].[Audience], [x].[BrowserCapabilities], [x].[CreatedDate], [x].[DeletedDate], [x].[ExpirationDate], [x].[IP], [x].[Issuer], [x].[SecurityTypeId], [x].[SystemName], [x].[TokenKey], [x].[UserId], [x].[UserRole]\r\nFROM [Token] AS [x]\r\nWHERE (([x].[UserId] = @__userId_0) AND ([x].[ExpirationDate] >= GETUTCDATE())) AND [x].[DeletedDate] IS NULL","EventId":{"Id":20102,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:30.6119663Z","@m":"Failed executing DbCommand (\"374\"ms) [Parameters=[\"@__userId_0='?' (DbType = Int64)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [x].[Id], [x].[Audience], [x].[BrowserCapabilities], [x].[CreatedDate], [x].[DeletedDate], [x].[ExpirationDate], [x].[IP], [x].[Issuer], [x].[SecurityTypeId], [x].[SystemName], [x].[TokenKey], [x].[UserId], [x].[UserRole]\r\nFROM [Token] AS [x]\r\nWHERE (([x].[UserId] = @__userId_0) AND ([x].[ExpirationDate] >= GETUTCDATE())) AND [x].[DeletedDate] IS NULL\"","@i":"627a98df","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\nClientConnectionId:7c8b13bc-6534-4a2d-8c74-045e030fff63\r\nError Number:208,State:1,Class:16","elapsed":"374","parameters":"@__userId_0='?' (DbType = Int64)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT TOP(1) [x].[Id], [x].[Audience], [x].[BrowserCapabilities], [x].[CreatedDate], [x].[DeletedDate], [x].[ExpirationDate], [x].[IP], [x].[Issuer], [x].[SecurityTypeId], [x].[SystemName], [x].[TokenKey], [x].[UserId], [x].[UserRole]\r\nFROM [Token] AS [x]\r\nWHERE (([x].[UserId] = @__userId_0) AND ([x].[ExpirationDate] >= GETUTCDATE())) AND [x].[DeletedDate] IS NULL","EventId":{"Id":20102,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:30.8017873Z","@m":"An exception occurred while iterating over the results of a query for context type '\"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext\"'.\"\r\n\"\"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\nClientConnectionId:7c8b13bc-6534-4a2d-8c74-045e030fff63\r\nError Number:208,State:1,Class:16\"","@i":"f5c7ac34","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\nClientConnectionId:7c8b13bc-6534-4a2d-8c74-045e030fff63\r\nError Number:208,State:1,Class:16","contextType":"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext","newline":"\r\n","error":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\nClientConnectionId:7c8b13bc-6534-4a2d-8c74-045e030fff63\r\nError Number:208,State:1,Class:16","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:30.8637346Z","@m":"An exception occurred while iterating over the results of a query for context type '\"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext\"'.\"\r\n\"\"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\nClientConnectionId:78e03bfe-a8fe-4d88-bbb6-a6ba82199d53\r\nError Number:208,State:1,Class:16\"","@i":"f5c7ac34","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\nClientConnectionId:78e03bfe-a8fe-4d88-bbb6-a6ba82199d53\r\nError Number:208,State:1,Class:16","contextType":"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext","newline":"\r\n","error":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\nClientConnectionId:78e03bfe-a8fe-4d88-bbb6-a6ba82199d53\r\nError Number:208,State:1,Class:16","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:30.9268204Z","@m":"An exception occurred while iterating over the results of a query for context type '\"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext\"'.\"\r\n\"\"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\nClientConnectionId:78e03bfe-a8fe-4d88-bbb6-a6ba82199d53\r\nError Number:208,State:1,Class:16\"","@i":"f5c7ac34","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source)\r\n   at JwtWebTokenSerice.Modules.JwtTokenModule.GetToken(String BrowserCapabilities, String IpAdderess, String HostUrl, Boolean IsForceNew) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Modules\\JwtTokenModule.cs:line 52\r\nClientConnectionId:78e03bfe-a8fe-4d88-bbb6-a6ba82199d53\r\nError Number:208,State:1,Class:16","contextType":"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext","newline":"\r\n","error":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\nClientConnectionId:78e03bfe-a8fe-4d88-bbb6-a6ba82199d53\r\nError Number:208,State:1,Class:16","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:30.9289195Z","@m":"An exception occurred while iterating over the results of a query for context type '\"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext\"'.\"\r\n\"\"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\nClientConnectionId:7c8b13bc-6534-4a2d-8c74-045e030fff63\r\nError Number:208,State:1,Class:16\"","@i":"f5c7ac34","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source)\r\n   at JwtWebTokenSerice.Modules.JwtTokenModule.GetToken(String BrowserCapabilities, String IpAdderess, String HostUrl, Boolean IsForceNew) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Modules\\JwtTokenModule.cs:line 52\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nClientConnectionId:7c8b13bc-6534-4a2d-8c74-045e030fff63\r\nError Number:208,State:1,Class:16","contextType":"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext","newline":"\r\n","error":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\nClientConnectionId:7c8b13bc-6534-4a2d-8c74-045e030fff63\r\nError Number:208,State:1,Class:16","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:31.7569213Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 17680.6569ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":17680.6569,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:31.8790495Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:31.9968362Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 4015.7915ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":4015.7915000000003,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"6bae5ab6-1453-4cbf-af59-403aafb0d194","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:32.1140758Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:32.6327810Z","@m":"An unhandled exception has occurred while executing the request.","@i":"48a46595","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source)\r\n   at JwtWebTokenSerice.Modules.JwtTokenModule.GetToken(String BrowserCapabilities, String IpAdderess, String HostUrl, Boolean IsForceNew) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Modules\\JwtTokenModule.cs:line 52\r\n   at JwtWebTokenSerice.Controllers.TokenController.Get(User UserParam) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Controllers\\TokenController.cs:line 51\r\n   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)\r\n   at StackifyMiddleware.RequestTracerMiddleware.InvokeAsync(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\nClientConnectionId:78e03bfe-a8fe-4d88-bbb6-a6ba82199d53\r\nError Number:208,State:1,Class:16","EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:32.6399569Z","@m":"An unhandled exception has occurred while executing the request.","@i":"48a46595","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source)\r\n   at JwtWebTokenSerice.Modules.JwtTokenModule.GetToken(String BrowserCapabilities, String IpAdderess, String HostUrl, Boolean IsForceNew) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Modules\\JwtTokenModule.cs:line 52\r\n   at JwtWebTokenSerice.Controllers.TokenController.Get(User UserParam) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Controllers\\TokenController.cs:line 51\r\n   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)\r\n   at StackifyMiddleware.RequestTracerMiddleware.InvokeAsync(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\nClientConnectionId:7c8b13bc-6534-4a2d-8c74-045e030fff63\r\nError Number:208,State:1,Class:16","EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:32.9740719Z","@m":"Request finished in 18914.6526ms 500 text/html; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":18914.6526,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 18914.6526ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3FV:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3FV"}
{"@t":"2020-02-12T11:06:32.9768707Z","@m":"Request finished in 5011.3989ms 500 text/html; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":5011.3989,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 5011.3989ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLCSDN3G0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLCSDN3G0"}
{"@t":"2020-02-12T11:06:44.7566868Z","@m":"Request starting HTTP/1.1 GET http://localhost:30796/  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:30796/  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLEINA9FE:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:44.7566868Z","@m":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"DEBUG","ContentType":null,"ContentLength":0,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLEINA9FD:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FD"}
{"@t":"2020-02-12T11:06:44.7985262Z","@m":"Request finished in 60.4676ms 200 ","@i":"791a596a","ElapsedMilliseconds":60.467600000000004,"StatusCode":200,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 60.4676ms 200 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLEINA9FD:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FD"}
{"@t":"2020-02-12T11:06:44.8869859Z","@m":"Request finished in 152.0427ms 404 ","@i":"791a596a","ElapsedMilliseconds":152.0427,"StatusCode":404,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 152.0427ms 404 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLEINA9FE:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:47.4945527Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLEINA9FD:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FD"}
{"@t":"2020-02-12T11:06:47.4983476Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLEINA9FD:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FD"}
{"@t":"2020-02-12T11:06:47.5007445Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLEINA9FD:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FD"}
{"@t":"2020-02-12T11:06:47.5040831Z","@m":"Request finished in 9.1295ms 204 ","@i":"791a596a","ElapsedMilliseconds":9.1295,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 9.1295ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLEINA9FD:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FD"}
{"@t":"2020-02-12T11:06:47.5113314Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 65","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":65,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 65","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:47.5133385Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:47.5151440Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:47.5294382Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:47.5599315Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b61dc13c-2b05-4f63-ac47-37da4b94b314","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:47.8169963Z","@m":"Executing action method \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" - Validation state: Valid","@i":"dad538d7","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b61dc13c-2b05-4f63-ac47-37da4b94b314","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:49.3466745Z","@m":"The property '\"Id\"' on entity type '\"ActivityCheckType\"' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@i":"316a401d","@l":"Warning","property":"Id","entityType":"ActivityCheckType","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"b61dc13c-2b05-4f63-ac47-37da4b94b314","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:49.3482878Z","@m":"The property '\"Id\"' on entity type '\"ActivityType\"' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@i":"316a401d","@l":"Warning","property":"Id","entityType":"ActivityType","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"b61dc13c-2b05-4f63-ac47-37da4b94b314","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:49.3948016Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WizdiContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WizdiContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"b61dc13c-2b05-4f63-ac47-37da4b94b314","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:49.6615394Z","@m":"Executed DbCommand (\"52\"ms) [Parameters=[\"@__UserName_0='?' (Size = 50), @__Password_1='?' (Size = 512)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [x].[ID], [x].[AboutMySelf], [x].[Age], [x].[AvatarUrl], [x].[BirthDate], [x].[City], [x].[CountryID], [x].[CreateDate], [x].[CreditBalance], [x].[CurrentPackID], [x].[CurrentStorage], [x].[DeleteDate], [x].[Description], [x].[DisableAccountByUser], [x].[EduSub], [x].[EduUser], [x].[Email], [x].[EmailNews], [x].[EmailPartners], [x].[EmailSellings], [x].[EmailUpdated], [x].[FaildLoginAttempts], [x].[FavoriteQuote], [x].[FirstName], [x].[Gender], [x].[InternalComment], [x].[IsActive], [x].[LastName], [x].[LegalIdendifier], [x].[LockedUser], [x].[LUserType], [x].[MaxStorage], [x].[MobileNumber], [x].[PackExpirationDate], [x].[Password], [x].[PayPalEmail], [x].[PhoneID], [x].[PreferredFieldOfKnowledgeID], [x].[Rank], [x].[ShortDesc], [x].[StateID], [x].[UpdateDate], [x].[UserMustChangePassword], [x].[Username], [x.LuserTypeNavigation].[ID], [x.LuserTypeNavigation].[Const], [x.LuserTypeNavigation].[CreateDate], [x.LuserTypeNavigation].[DeleteDate], [x.LuserTypeNavigation].[Description], [x.LuserTypeNavigation].[IsActive], [x.LuserTypeNavigation].[LookupOrder], [x.LuserTypeNavigation].[LookupTypeID], [x.LuserTypeNavigation].[UpdateDate], [x.LuserTypeNavigation].[Value]\r\nFROM [User] AS [x]\r\nLEFT JOIN [LookupValue] AS [x.LuserTypeNavigation] ON [x].[LUserType] = [x.LuserTypeNavigation].[ID]\r\nWHERE (((([x].[Username] = @__UserName_0) AND ([x].[Password] = @__Password_1)) AND ([x].[IsActive] = 1)) AND ([x].[LockedUser] = 0)) AND [x].[DeleteDate] IS NULL\"","@i":"0723d8ff","elapsed":"52","parameters":"@__UserName_0='?' (Size = 50), @__Password_1='?' (Size = 512)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT TOP(1) [x].[ID], [x].[AboutMySelf], [x].[Age], [x].[AvatarUrl], [x].[BirthDate], [x].[City], [x].[CountryID], [x].[CreateDate], [x].[CreditBalance], [x].[CurrentPackID], [x].[CurrentStorage], [x].[DeleteDate], [x].[Description], [x].[DisableAccountByUser], [x].[EduSub], [x].[EduUser], [x].[Email], [x].[EmailNews], [x].[EmailPartners], [x].[EmailSellings], [x].[EmailUpdated], [x].[FaildLoginAttempts], [x].[FavoriteQuote], [x].[FirstName], [x].[Gender], [x].[InternalComment], [x].[IsActive], [x].[LastName], [x].[LegalIdendifier], [x].[LockedUser], [x].[LUserType], [x].[MaxStorage], [x].[MobileNumber], [x].[PackExpirationDate], [x].[Password], [x].[PayPalEmail], [x].[PhoneID], [x].[PreferredFieldOfKnowledgeID], [x].[Rank], [x].[ShortDesc], [x].[StateID], [x].[UpdateDate], [x].[UserMustChangePassword], [x].[Username], [x.LuserTypeNavigation].[ID], [x.LuserTypeNavigation].[Const], [x.LuserTypeNavigation].[CreateDate], [x.LuserTypeNavigation].[DeleteDate], [x.LuserTypeNavigation].[Description], [x.LuserTypeNavigation].[IsActive], [x.LuserTypeNavigation].[LookupOrder], [x.LuserTypeNavigation].[LookupTypeID], [x.LuserTypeNavigation].[UpdateDate], [x.LuserTypeNavigation].[Value]\r\nFROM [User] AS [x]\r\nLEFT JOIN [LookupValue] AS [x.LuserTypeNavigation] ON [x].[LUserType] = [x.LuserTypeNavigation].[ID]\r\nWHERE (((([x].[Username] = @__UserName_0) AND ([x].[Password] = @__Password_1)) AND ([x].[IsActive] = 1)) AND ([x].[LockedUser] = 0)) AND [x].[DeleteDate] IS NULL","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"b61dc13c-2b05-4f63-ac47-37da4b94b314","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:49.8569549Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WebTokenIdentityContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WebTokenIdentityContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"b61dc13c-2b05-4f63-ac47-37da4b94b314","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:50.1344767Z","@m":"Failed executing DbCommand (\"235\"ms) [Parameters=[\"@__userId_0='?' (DbType = Int64)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [x].[Id], [x].[Audience], [x].[BrowserCapabilities], [x].[CreatedDate], [x].[DeletedDate], [x].[ExpirationDate], [x].[IP], [x].[Issuer], [x].[SecurityTypeId], [x].[SystemName], [x].[TokenKey], [x].[UserId], [x].[UserRole]\r\nFROM [Token] AS [x]\r\nWHERE (([x].[UserId] = @__userId_0) AND ([x].[ExpirationDate] >= GETUTCDATE())) AND [x].[DeletedDate] IS NULL\"","@i":"627a98df","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\nClientConnectionId:b92aa152-5c54-410d-adc5-202d68d7ccce\r\nError Number:208,State:1,Class:16","elapsed":"235","parameters":"@__userId_0='?' (DbType = Int64)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT TOP(1) [x].[Id], [x].[Audience], [x].[BrowserCapabilities], [x].[CreatedDate], [x].[DeletedDate], [x].[ExpirationDate], [x].[IP], [x].[Issuer], [x].[SecurityTypeId], [x].[SystemName], [x].[TokenKey], [x].[UserId], [x].[UserRole]\r\nFROM [Token] AS [x]\r\nWHERE (([x].[UserId] = @__userId_0) AND ([x].[ExpirationDate] >= GETUTCDATE())) AND [x].[DeletedDate] IS NULL","EventId":{"Id":20102,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"b61dc13c-2b05-4f63-ac47-37da4b94b314","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:50.2394407Z","@m":"An exception occurred while iterating over the results of a query for context type '\"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext\"'.\"\r\n\"\"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\nClientConnectionId:b92aa152-5c54-410d-adc5-202d68d7ccce\r\nError Number:208,State:1,Class:16\"","@i":"f5c7ac34","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\nClientConnectionId:b92aa152-5c54-410d-adc5-202d68d7ccce\r\nError Number:208,State:1,Class:16","contextType":"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext","newline":"\r\n","error":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\nClientConnectionId:b92aa152-5c54-410d-adc5-202d68d7ccce\r\nError Number:208,State:1,Class:16","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"b61dc13c-2b05-4f63-ac47-37da4b94b314","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:50.2966574Z","@m":"An exception occurred while iterating over the results of a query for context type '\"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext\"'.\"\r\n\"\"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\nClientConnectionId:b92aa152-5c54-410d-adc5-202d68d7ccce\r\nError Number:208,State:1,Class:16\"","@i":"f5c7ac34","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\nClientConnectionId:b92aa152-5c54-410d-adc5-202d68d7ccce\r\nError Number:208,State:1,Class:16","contextType":"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext","newline":"\r\n","error":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\nClientConnectionId:b92aa152-5c54-410d-adc5-202d68d7ccce\r\nError Number:208,State:1,Class:16","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"b61dc13c-2b05-4f63-ac47-37da4b94b314","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:50.8066540Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 3242.0179ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":3242.0179000000003,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b61dc13c-2b05-4f63-ac47-37da4b94b314","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:50.8688805Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:51.2171937Z","@m":"An unhandled exception has occurred while executing the request.","@i":"48a46595","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Token'.\r\n   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\r\n   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\r\n   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\r\n   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()\r\n   at System.Data.SqlClient.SqlDataReader.get_MetaData()\r\n   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.ExecuteReader()\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source)\r\n   at JwtWebTokenSerice.Modules.JwtTokenModule.GetToken(String BrowserCapabilities, String IpAdderess, String HostUrl, Boolean IsForceNew) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Modules\\JwtTokenModule.cs:line 52\r\n   at JwtWebTokenSerice.Controllers.TokenController.Get(User UserParam) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Controllers\\TokenController.cs:line 51\r\n   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)\r\n   at StackifyMiddleware.RequestTracerMiddleware.InvokeAsync(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\nClientConnectionId:b92aa152-5c54-410d-adc5-202d68d7ccce\r\nError Number:208,State:1,Class:16","EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:06:51.3989300Z","@m":"Request finished in 3887.8614ms 500 text/html; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":3887.8614000000002,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 3887.8614ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLEINA9FE:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLEINA9FE"}
{"@t":"2020-02-12T11:08:46.4876578Z","@m":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"DEBUG","ContentType":null,"ContentLength":0,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLFN0BVAK:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAK"}
{"@t":"2020-02-12T11:08:46.4876577Z","@m":"Request starting HTTP/1.1 GET http://localhost:30796/  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:30796/  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLFN0BVAJ:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:08:46.5254557Z","@m":"Request finished in 58.4105ms 200 ","@i":"791a596a","ElapsedMilliseconds":58.410500000000006,"StatusCode":200,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 58.4105ms 200 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLFN0BVAK:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAK"}
{"@t":"2020-02-12T11:08:46.6078034Z","@m":"Request finished in 142.6022ms 404 ","@i":"791a596a","ElapsedMilliseconds":142.6022,"StatusCode":404,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 142.6022ms 404 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLFN0BVAJ:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:02.0247664Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLFN0BVAK:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAK"}
{"@t":"2020-02-12T11:09:02.0280645Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLFN0BVAK:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAK"}
{"@t":"2020-02-12T11:09:02.0303239Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLFN0BVAK:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAK"}
{"@t":"2020-02-12T11:09:02.0342714Z","@m":"Request finished in 8.9171ms 204 ","@i":"791a596a","ElapsedMilliseconds":8.9171,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 8.9171ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLFN0BVAK:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAK"}
{"@t":"2020-02-12T11:09:02.0394399Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 65","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":65,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 65","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:02.0416746Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:02.0438148Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:02.0557775Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:02.0878544Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"9bcee94e-f244-4093-8595-e3b68d9c1cdf","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:02.3492986Z","@m":"Executing action method \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" - Validation state: Valid","@i":"dad538d7","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"9bcee94e-f244-4093-8595-e3b68d9c1cdf","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:03.9487230Z","@m":"The property '\"Id\"' on entity type '\"ActivityCheckType\"' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@i":"316a401d","@l":"Warning","property":"Id","entityType":"ActivityCheckType","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"9bcee94e-f244-4093-8595-e3b68d9c1cdf","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:03.9507887Z","@m":"The property '\"Id\"' on entity type '\"ActivityType\"' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@i":"316a401d","@l":"Warning","property":"Id","entityType":"ActivityType","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"9bcee94e-f244-4093-8595-e3b68d9c1cdf","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:03.9940959Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WizdiContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WizdiContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"9bcee94e-f244-4093-8595-e3b68d9c1cdf","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:04.2773964Z","@m":"Executed DbCommand (\"52\"ms) [Parameters=[\"@__UserName_0='?' (Size = 50), @__Password_1='?' (Size = 512)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [x].[ID], [x].[AboutMySelf], [x].[Age], [x].[AvatarUrl], [x].[BirthDate], [x].[City], [x].[CountryID], [x].[CreateDate], [x].[CreditBalance], [x].[CurrentPackID], [x].[CurrentStorage], [x].[DeleteDate], [x].[Description], [x].[DisableAccountByUser], [x].[EduSub], [x].[EduUser], [x].[Email], [x].[EmailNews], [x].[EmailPartners], [x].[EmailSellings], [x].[EmailUpdated], [x].[FaildLoginAttempts], [x].[FavoriteQuote], [x].[FirstName], [x].[Gender], [x].[InternalComment], [x].[IsActive], [x].[LastName], [x].[LegalIdendifier], [x].[LockedUser], [x].[LUserType], [x].[MaxStorage], [x].[MobileNumber], [x].[PackExpirationDate], [x].[Password], [x].[PayPalEmail], [x].[PhoneID], [x].[PreferredFieldOfKnowledgeID], [x].[Rank], [x].[ShortDesc], [x].[StateID], [x].[UpdateDate], [x].[UserMustChangePassword], [x].[Username], [x.LuserTypeNavigation].[ID], [x.LuserTypeNavigation].[Const], [x.LuserTypeNavigation].[CreateDate], [x.LuserTypeNavigation].[DeleteDate], [x.LuserTypeNavigation].[Description], [x.LuserTypeNavigation].[IsActive], [x.LuserTypeNavigation].[LookupOrder], [x.LuserTypeNavigation].[LookupTypeID], [x.LuserTypeNavigation].[UpdateDate], [x.LuserTypeNavigation].[Value]\r\nFROM [User] AS [x]\r\nLEFT JOIN [LookupValue] AS [x.LuserTypeNavigation] ON [x].[LUserType] = [x.LuserTypeNavigation].[ID]\r\nWHERE (((([x].[Username] = @__UserName_0) AND ([x].[Password] = @__Password_1)) AND ([x].[IsActive] = 1)) AND ([x].[LockedUser] = 0)) AND [x].[DeleteDate] IS NULL\"","@i":"0723d8ff","elapsed":"52","parameters":"@__UserName_0='?' (Size = 50), @__Password_1='?' (Size = 512)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT TOP(1) [x].[ID], [x].[AboutMySelf], [x].[Age], [x].[AvatarUrl], [x].[BirthDate], [x].[City], [x].[CountryID], [x].[CreateDate], [x].[CreditBalance], [x].[CurrentPackID], [x].[CurrentStorage], [x].[DeleteDate], [x].[Description], [x].[DisableAccountByUser], [x].[EduSub], [x].[EduUser], [x].[Email], [x].[EmailNews], [x].[EmailPartners], [x].[EmailSellings], [x].[EmailUpdated], [x].[FaildLoginAttempts], [x].[FavoriteQuote], [x].[FirstName], [x].[Gender], [x].[InternalComment], [x].[IsActive], [x].[LastName], [x].[LegalIdendifier], [x].[LockedUser], [x].[LUserType], [x].[MaxStorage], [x].[MobileNumber], [x].[PackExpirationDate], [x].[Password], [x].[PayPalEmail], [x].[PhoneID], [x].[PreferredFieldOfKnowledgeID], [x].[Rank], [x].[ShortDesc], [x].[StateID], [x].[UpdateDate], [x].[UserMustChangePassword], [x].[Username], [x.LuserTypeNavigation].[ID], [x.LuserTypeNavigation].[Const], [x.LuserTypeNavigation].[CreateDate], [x.LuserTypeNavigation].[DeleteDate], [x.LuserTypeNavigation].[Description], [x.LuserTypeNavigation].[IsActive], [x.LuserTypeNavigation].[LookupOrder], [x.LuserTypeNavigation].[LookupTypeID], [x.LuserTypeNavigation].[UpdateDate], [x.LuserTypeNavigation].[Value]\r\nFROM [User] AS [x]\r\nLEFT JOIN [LookupValue] AS [x.LuserTypeNavigation] ON [x].[LUserType] = [x.LuserTypeNavigation].[ID]\r\nWHERE (((([x].[Username] = @__UserName_0) AND ([x].[Password] = @__Password_1)) AND ([x].[IsActive] = 1)) AND ([x].[LockedUser] = 0)) AND [x].[DeleteDate] IS NULL","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"9bcee94e-f244-4093-8595-e3b68d9c1cdf","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:04.4726917Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WebTokenIdentityContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WebTokenIdentityContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"9bcee94e-f244-4093-8595-e3b68d9c1cdf","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:15.1367529Z","@m":"An error occurred using the connection to database '\"WebTokenIdentity\"' on server '\"172.26.137.86\"'.","@i":"5fc3407c","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Cannot open database \"WebTokenIdentity\" requested by the login. The login failed.\r\nLogin failed for user 'sa'.\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)\r\n   at System.Data.SqlClient.SqlConnection.Open()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)\r\nClientConnectionId:8c477615-e9c2-40fa-a3ec-13d96e384d3f\r\nError Number:4060,State:1,Class:11","database":"WebTokenIdentity","server":"172.26.137.86","EventId":{"Id":20004,"Name":"Microsoft.EntityFrameworkCore.Database.Connection.ConnectionError"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Connection","ActionId":"9bcee94e-f244-4093-8595-e3b68d9c1cdf","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:15.1951823Z","@m":"An exception occurred while iterating over the results of a query for context type '\"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext\"'.\"\r\n\"\"System.Data.SqlClient.SqlException (0x80131904): Cannot open database \\\"WebTokenIdentity\\\" requested by the login. The login failed.\r\nLogin failed for user 'sa'.\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)\r\n   at System.Data.SqlClient.SqlConnection.Open()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\nClientConnectionId:8c477615-e9c2-40fa-a3ec-13d96e384d3f\r\nError Number:4060,State:1,Class:11\"","@i":"f5c7ac34","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Cannot open database \"WebTokenIdentity\" requested by the login. The login failed.\r\nLogin failed for user 'sa'.\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)\r\n   at System.Data.SqlClient.SqlConnection.Open()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\nClientConnectionId:8c477615-e9c2-40fa-a3ec-13d96e384d3f\r\nError Number:4060,State:1,Class:11","contextType":"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext","newline":"\r\n","error":"System.Data.SqlClient.SqlException (0x80131904): Cannot open database \"WebTokenIdentity\" requested by the login. The login failed.\r\nLogin failed for user 'sa'.\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)\r\n   at System.Data.SqlClient.SqlConnection.Open()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\nClientConnectionId:8c477615-e9c2-40fa-a3ec-13d96e384d3f\r\nError Number:4060,State:1,Class:11","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"9bcee94e-f244-4093-8595-e3b68d9c1cdf","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:15.2541818Z","@m":"An exception occurred while iterating over the results of a query for context type '\"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext\"'.\"\r\n\"\"System.Data.SqlClient.SqlException (0x80131904): Cannot open database \\\"WebTokenIdentity\\\" requested by the login. The login failed.\r\nLogin failed for user 'sa'.\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)\r\n   at System.Data.SqlClient.SqlConnection.Open()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\nClientConnectionId:8c477615-e9c2-40fa-a3ec-13d96e384d3f\r\nError Number:4060,State:1,Class:11\"","@i":"f5c7ac34","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Cannot open database \"WebTokenIdentity\" requested by the login. The login failed.\r\nLogin failed for user 'sa'.\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)\r\n   at System.Data.SqlClient.SqlConnection.Open()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source)\r\n   at JwtWebTokenSerice.Modules.JwtTokenModule.GetToken(String BrowserCapabilities, String IpAdderess, String HostUrl, Boolean IsForceNew) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Modules\\JwtTokenModule.cs:line 52\r\nClientConnectionId:8c477615-e9c2-40fa-a3ec-13d96e384d3f\r\nError Number:4060,State:1,Class:11","contextType":"WizdiWizdiDataEntities.WebTokenIdentityEntities.WebTokenIdentityContext","newline":"\r\n","error":"System.Data.SqlClient.SqlException (0x80131904): Cannot open database \"WebTokenIdentity\" requested by the login. The login failed.\r\nLogin failed for user 'sa'.\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)\r\n   at System.Data.SqlClient.SqlConnection.Open()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\nClientConnectionId:8c477615-e9c2-40fa-a3ec-13d96e384d3f\r\nError Number:4060,State:1,Class:11","EventId":{"Id":10100,"Name":"Microsoft.EntityFrameworkCore.Query.QueryIterationFailed"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"9bcee94e-f244-4093-8595-e3b68d9c1cdf","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:15.7680815Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 13676.2524ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":13676.252400000001,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"9bcee94e-f244-4093-8595-e3b68d9c1cdf","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:15.8305527Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:16.1770675Z","@m":"An unhandled exception has occurred while executing the request.","@i":"48a46595","@l":"Error","@x":"System.Data.SqlClient.SqlException (0x80131904): Cannot open database \"WebTokenIdentity\" requested by the login. The login failed.\r\nLogin failed for user 'sa'.\r\n   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)\r\n   at System.Data.SqlClient.SqlConnection.Open()\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)\r\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at lambda_method(Closure )\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ResultEnumerable`1.GetEnumerator()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()\r\n   at System.Linq.Enumerable.TryGetFirst[TSource](IEnumerable`1 source, Boolean& found)\r\n   at System.Linq.Enumerable.First[TSource](IEnumerable`1 source)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass15_1`1.<CompileQueryCore>b__0(QueryContext qc)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)\r\n   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)\r\n   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source)\r\n   at JwtWebTokenSerice.Modules.JwtTokenModule.GetToken(String BrowserCapabilities, String IpAdderess, String HostUrl, Boolean IsForceNew) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Modules\\JwtTokenModule.cs:line 52\r\n   at JwtWebTokenSerice.Controllers.TokenController.Get(User UserParam) in D:\\wwwroot\\JsonWebTokenServer\\JsonWebTokenServer\\Controllers\\TokenController.cs:line 51\r\n   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)\r\n   at StackifyMiddleware.RequestTracerMiddleware.InvokeAsync(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\nClientConnectionId:8c477615-e9c2-40fa-a3ec-13d96e384d3f\r\nError Number:4060,State:1,Class:11","EventId":{"Id":1,"Name":"UnhandledException"},"SourceContext":"Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:09:16.3608486Z","@m":"Request finished in 14322.1297ms 500 text/html; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":14322.129700000001,"StatusCode":500,"ContentType":"text/html; charset=utf-8","HostingRequestFinishedLog":"Request finished in 14322.1297ms 500 text/html; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLFN0BVAJ:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLFN0BVAJ"}
{"@t":"2020-02-12T11:11:01.0269664Z","@m":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"DEBUG","ContentType":null,"ContentLength":0,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLGV3BKK1:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK1"}
{"@t":"2020-02-12T11:11:01.0269664Z","@m":"Request starting HTTP/1.1 GET http://localhost:30796/  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:30796/  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLGV3BKK0:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:01.0636832Z","@m":"Request finished in 54.3073ms 200 ","@i":"791a596a","ElapsedMilliseconds":54.307300000000005,"StatusCode":200,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 54.3073ms 200 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLGV3BKK1:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK1"}
{"@t":"2020-02-12T11:11:01.1557197Z","@m":"Request finished in 148.6028ms 404 ","@i":"791a596a","ElapsedMilliseconds":148.6028,"StatusCode":404,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 148.6028ms 404 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLGV3BKK0:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:02.5831855Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/get  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLGV3BKK1:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK1"}
{"@t":"2020-02-12T11:11:02.5868276Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLGV3BKK1:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK1"}
{"@t":"2020-02-12T11:11:02.5885648Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLGV3BKK1:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK1"}
{"@t":"2020-02-12T11:11:02.5911867Z","@m":"Request finished in 8.8287ms 204 ","@i":"791a596a","ElapsedMilliseconds":8.8287,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 8.8287ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLGV3BKK1:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK1"}
{"@t":"2020-02-12T11:11:02.5948155Z","@m":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 65","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"POST","ContentType":"application/json","ContentLength":65,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/get","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 POST http://localhost:30796/api/token/get application/json 65","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:02.5969806Z","@m":"The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.","@i":"6e5ffae2","@l":"Warning","EventId":{"Id":11,"Name":"CorsInsecureConfiguration"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:02.5985198Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:02.6071490Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:02.6416548Z","@m":"Route matched with \"{action = \\\"get\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"get\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"277f0659-0716-499e-9a1b-91e17b6f1410","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:02.8962532Z","@m":"Executing action method \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" - Validation state: Valid","@i":"dad538d7","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"277f0659-0716-499e-9a1b-91e17b6f1410","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:04.4621265Z","@m":"The property '\"Id\"' on entity type '\"ActivityCheckType\"' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@i":"316a401d","@l":"Warning","property":"Id","entityType":"ActivityCheckType","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"277f0659-0716-499e-9a1b-91e17b6f1410","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:04.4640407Z","@m":"The property '\"Id\"' on entity type '\"ActivityType\"' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@i":"316a401d","@l":"Warning","property":"Id","entityType":"ActivityType","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"277f0659-0716-499e-9a1b-91e17b6f1410","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:04.5108093Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WizdiContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WizdiContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"277f0659-0716-499e-9a1b-91e17b6f1410","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:04.8414777Z","@m":"Executed DbCommand (\"109\"ms) [Parameters=[\"@__UserName_0='?' (Size = 50), @__Password_1='?' (Size = 512)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [x].[ID], [x].[AboutMySelf], [x].[Age], [x].[AvatarUrl], [x].[BirthDate], [x].[City], [x].[CountryID], [x].[CreateDate], [x].[CreditBalance], [x].[CurrentPackID], [x].[CurrentStorage], [x].[DeleteDate], [x].[Description], [x].[DisableAccountByUser], [x].[EduSub], [x].[EduUser], [x].[Email], [x].[EmailNews], [x].[EmailPartners], [x].[EmailSellings], [x].[EmailUpdated], [x].[FaildLoginAttempts], [x].[FavoriteQuote], [x].[FirstName], [x].[Gender], [x].[InternalComment], [x].[IsActive], [x].[LastName], [x].[LegalIdendifier], [x].[LockedUser], [x].[LUserType], [x].[MaxStorage], [x].[MobileNumber], [x].[PackExpirationDate], [x].[Password], [x].[PayPalEmail], [x].[PhoneID], [x].[PreferredFieldOfKnowledgeID], [x].[Rank], [x].[ShortDesc], [x].[StateID], [x].[UpdateDate], [x].[UserMustChangePassword], [x].[Username], [x.LuserTypeNavigation].[ID], [x.LuserTypeNavigation].[Const], [x.LuserTypeNavigation].[CreateDate], [x.LuserTypeNavigation].[DeleteDate], [x.LuserTypeNavigation].[Description], [x.LuserTypeNavigation].[IsActive], [x.LuserTypeNavigation].[LookupOrder], [x.LuserTypeNavigation].[LookupTypeID], [x.LuserTypeNavigation].[UpdateDate], [x.LuserTypeNavigation].[Value]\r\nFROM [User] AS [x]\r\nLEFT JOIN [LookupValue] AS [x.LuserTypeNavigation] ON [x].[LUserType] = [x.LuserTypeNavigation].[ID]\r\nWHERE (((([x].[Username] = @__UserName_0) AND ([x].[Password] = @__Password_1)) AND ([x].[IsActive] = 1)) AND ([x].[LockedUser] = 0)) AND [x].[DeleteDate] IS NULL\"","@i":"0723d8ff","elapsed":"109","parameters":"@__UserName_0='?' (Size = 50), @__Password_1='?' (Size = 512)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT TOP(1) [x].[ID], [x].[AboutMySelf], [x].[Age], [x].[AvatarUrl], [x].[BirthDate], [x].[City], [x].[CountryID], [x].[CreateDate], [x].[CreditBalance], [x].[CurrentPackID], [x].[CurrentStorage], [x].[DeleteDate], [x].[Description], [x].[DisableAccountByUser], [x].[EduSub], [x].[EduUser], [x].[Email], [x].[EmailNews], [x].[EmailPartners], [x].[EmailSellings], [x].[EmailUpdated], [x].[FaildLoginAttempts], [x].[FavoriteQuote], [x].[FirstName], [x].[Gender], [x].[InternalComment], [x].[IsActive], [x].[LastName], [x].[LegalIdendifier], [x].[LockedUser], [x].[LUserType], [x].[MaxStorage], [x].[MobileNumber], [x].[PackExpirationDate], [x].[Password], [x].[PayPalEmail], [x].[PhoneID], [x].[PreferredFieldOfKnowledgeID], [x].[Rank], [x].[ShortDesc], [x].[StateID], [x].[UpdateDate], [x].[UserMustChangePassword], [x].[Username], [x.LuserTypeNavigation].[ID], [x.LuserTypeNavigation].[Const], [x.LuserTypeNavigation].[CreateDate], [x.LuserTypeNavigation].[DeleteDate], [x.LuserTypeNavigation].[Description], [x.LuserTypeNavigation].[IsActive], [x.LuserTypeNavigation].[LookupOrder], [x.LuserTypeNavigation].[LookupTypeID], [x.LuserTypeNavigation].[UpdateDate], [x.LuserTypeNavigation].[Value]\r\nFROM [User] AS [x]\r\nLEFT JOIN [LookupValue] AS [x.LuserTypeNavigation] ON [x].[LUserType] = [x.LuserTypeNavigation].[ID]\r\nWHERE (((([x].[Username] = @__UserName_0) AND ([x].[Password] = @__Password_1)) AND ([x].[IsActive] = 1)) AND ([x].[LockedUser] = 0)) AND [x].[DeleteDate] IS NULL","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"277f0659-0716-499e-9a1b-91e17b6f1410","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:05.0359802Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WebTokenIdentityContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WebTokenIdentityContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"277f0659-0716-499e-9a1b-91e17b6f1410","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:05.0726227Z","@m":"Executed DbCommand (\"8\"ms) [Parameters=[\"@__userId_0='?' (DbType = Int64)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [x].[Id], [x].[Audience], [x].[BrowserCapabilities], [x].[CreatedDate], [x].[DeletedDate], [x].[ExpirationDate], [x].[IP], [x].[Issuer], [x].[SecurityTypeId], [x].[SystemName], [x].[TokenKey], [x].[UserId], [x].[UserRole]\r\nFROM [Token] AS [x]\r\nWHERE (([x].[UserId] = @__userId_0) AND ([x].[ExpirationDate] >= GETUTCDATE())) AND [x].[DeletedDate] IS NULL\"","@i":"0723d8ff","elapsed":"8","parameters":"@__userId_0='?' (DbType = Int64)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT TOP(1) [x].[Id], [x].[Audience], [x].[BrowserCapabilities], [x].[CreatedDate], [x].[DeletedDate], [x].[ExpirationDate], [x].[IP], [x].[Issuer], [x].[SecurityTypeId], [x].[SystemName], [x].[TokenKey], [x].[UserId], [x].[UserRole]\r\nFROM [Token] AS [x]\r\nWHERE (([x].[UserId] = @__userId_0) AND ([x].[ExpirationDate] >= GETUTCDATE())) AND [x].[DeletedDate] IS NULL","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"277f0659-0716-499e-9a1b-91e17b6f1410","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:05.0885159Z","@m":"Executed action method \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\", returned result \"Microsoft.AspNetCore.Mvc.OkObjectResult\" in 2187.8194ms.","@i":"50a9e262","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":2187.8194000000003,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"277f0659-0716-499e-9a1b-91e17b6f1410","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:05.0981407Z","@m":"Executing ObjectResult, writing value of type '\"<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]\"'.","@i":"8a1b66c8","Type":"<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"277f0659-0716-499e-9a1b-91e17b6f1410","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:05.1127778Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\" in 2466.3226ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","ElapsedMilliseconds":2466.3226,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"277f0659-0716-499e-9a1b-91e17b6f1410","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:05.1158126Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.Get (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T11:11:05.1238778Z","@m":"Request finished in 2529.0214ms 200 application/json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":2529.0214,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 2529.0214ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFLGV3BKK0:00000002","RequestPath":"/api/token/get","CorrelationId":null,"ConnectionId":"0HLTFLGV3BKK0"}
{"@t":"2020-02-12T12:30:52.0619830Z","@m":"Request starting HTTP/1.1 GET http://localhost:30796/  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:30796/  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMTIU65JU:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:30:52.0619830Z","@m":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"DEBUG","ContentType":null,"ContentLength":0,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMTIU65JT:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JT"}
{"@t":"2020-02-12T12:30:52.0965532Z","@m":"Request finished in 54.5519ms 200 ","@i":"791a596a","ElapsedMilliseconds":54.5519,"StatusCode":200,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 54.5519ms 200 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMTIU65JT:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JT"}
{"@t":"2020-02-12T12:30:52.1777800Z","@m":"Request finished in 137.7364ms 404 ","@i":"791a596a","ElapsedMilliseconds":137.7364,"StatusCode":404,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 137.7364ms 404 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMTIU65JU:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:31:21.1511486Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/getToken?{%22username%22:%22%D7%9E%D7%95%D7%A8%D7%94107%22,%22password%22:%22123456%22,%22isForceNew%22:false}  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/getToken","QueryString":"?{%22username%22:%22%D7%9E%D7%95%D7%A8%D7%94107%22,%22password%22:%22123456%22,%22isForceNew%22:false}","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/getToken?{%22username%22:%22%D7%9E%D7%95%D7%A8%D7%94107%22,%22password%22:%22123456%22,%22isForceNew%22:false}  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMTIU65JT:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JT"}
{"@t":"2020-02-12T12:31:21.1554145Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFMTIU65JT:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JT"}
{"@t":"2020-02-12T12:31:21.1585373Z","@m":"Request finished in 7.4025ms 204 ","@i":"791a596a","ElapsedMilliseconds":7.4025000000000007,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 7.4025ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMTIU65JT:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JT"}
{"@t":"2020-02-12T12:31:21.1629972Z","@m":"Request starting HTTP/1.1 GET http://localhost:30796/api/token/getToken?{%22username%22:%22%D7%9E%D7%95%D7%A8%D7%94107%22,%22password%22:%22123456%22,%22isForceNew%22:false} application/json ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"GET","ContentType":"application/json","ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/getToken","QueryString":"?{%22username%22:%22%D7%9E%D7%95%D7%A8%D7%94107%22,%22password%22:%22123456%22,%22isForceNew%22:false}","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:30796/api/token/getToken?{%22username%22:%22%D7%9E%D7%95%D7%A8%D7%94107%22,%22password%22:%22123456%22,%22isForceNew%22:false} application/json ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMTIU65JU:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:31:21.1646433Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFMTIU65JU:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:31:21.1827988Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFMTIU65JU:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:31:21.2131285Z","@m":"Route matched with \"{action = \\\"GetToken\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetToken(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"GetToken\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetToken(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b1e1117b-557b-4936-8fda-703dcfabd2e2","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMTIU65JU:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:31:21.2165904Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","ActionId":"b1e1117b-557b-4936-8fda-703dcfabd2e2","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMTIU65JU:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:31:21.5466581Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"b1e1117b-557b-4936-8fda-703dcfabd2e2","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMTIU65JU:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:31:21.5695393Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)\" in 351.5399ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","ElapsedMilliseconds":351.5399,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b1e1117b-557b-4936-8fda-703dcfabd2e2","RequestId":"0HLTFMTIU65JU:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:31:21.5716590Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFMTIU65JU:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:31:21.5749947Z","@m":"Request finished in 411.7134ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":411.71340000000004,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 411.7134ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMTIU65JU:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:32:08.1178659Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/getToken?username=%D7%9E%D7%95%D7%A8%D7%94107&password=123456&isForceNew=false  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/getToken","QueryString":"?username=%D7%9E%D7%95%D7%A8%D7%94107&password=123456&isForceNew=false","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/getToken?username=%D7%9E%D7%95%D7%A8%D7%94107&password=123456&isForceNew=false  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMTIU65JT:00000003","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JT"}
{"@t":"2020-02-12T12:32:08.1198220Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFMTIU65JT:00000003","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JT"}
{"@t":"2020-02-12T12:32:08.1214730Z","@m":"Request finished in 3.8571ms 204 ","@i":"791a596a","ElapsedMilliseconds":3.8571,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 3.8571ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMTIU65JT:00000003","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JT"}
{"@t":"2020-02-12T12:32:08.1288031Z","@m":"Request starting HTTP/1.1 GET http://localhost:30796/api/token/getToken?username=%D7%9E%D7%95%D7%A8%D7%94107&password=123456&isForceNew=false application/json ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"GET","ContentType":"application/json","ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/getToken","QueryString":"?username=%D7%9E%D7%95%D7%A8%D7%94107&password=123456&isForceNew=false","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:30796/api/token/getToken?username=%D7%9E%D7%95%D7%A8%D7%94107&password=123456&isForceNew=false application/json ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMTIU65JU:00000003","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:32:08.1308400Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFMTIU65JU:00000003","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:32:08.1354388Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFMTIU65JU:00000003","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:32:08.1375453Z","@m":"Route matched with \"{action = \\\"GetToken\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetToken(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"GetToken\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetToken(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b1e1117b-557b-4936-8fda-703dcfabd2e2","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMTIU65JU:00000003","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:32:08.1390954Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","ActionId":"b1e1117b-557b-4936-8fda-703dcfabd2e2","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMTIU65JU:00000003","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:32:08.1424084Z","@m":"Executing ObjectResult, writing value of type '\"Microsoft.AspNetCore.Mvc.ValidationProblemDetails\"'.","@i":"8a1b66c8","Type":"Microsoft.AspNetCore.Mvc.ValidationProblemDetails","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"b1e1117b-557b-4936-8fda-703dcfabd2e2","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMTIU65JU:00000003","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:32:08.1445599Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)\" in 5.3546ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","ElapsedMilliseconds":5.3546000000000005,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"b1e1117b-557b-4936-8fda-703dcfabd2e2","RequestId":"0HLTFMTIU65JU:00000003","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:32:08.1461124Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFMTIU65JU:00000003","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:32:08.1480246Z","@m":"Request finished in 19.2774ms 400 application/problem+json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":19.2774,"StatusCode":400,"ContentType":"application/problem+json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 19.2774ms 400 application/problem+json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMTIU65JU:00000003","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMTIU65JU"}
{"@t":"2020-02-12T12:32:37.2679501Z","@m":"Request starting HTTP/1.1 GET http://localhost:30796/  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:30796/  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMUI97I1O:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:37.2679500Z","@m":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"DEBUG","ContentType":null,"ContentLength":0,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/","QueryString":"","HostingRequestStartingLog":"Request starting HTTP/1.1 DEBUG http://localhost:30796/  0","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMUI97I1N:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1N"}
{"@t":"2020-02-12T12:32:37.3128701Z","@m":"Request finished in 79.5437ms 200 ","@i":"791a596a","ElapsedMilliseconds":79.5437,"StatusCode":200,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 79.5437ms 200 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMUI97I1N:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1N"}
{"@t":"2020-02-12T12:32:37.4030900Z","@m":"Request finished in 171.985ms 404 ","@i":"791a596a","ElapsedMilliseconds":171.985,"StatusCode":404,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 171.985ms 404 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMUI97I1O:00000001","RequestPath":"/","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:40.5996040Z","@m":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/getToken?username=%D7%9E%D7%95%D7%A8%D7%94107&password=123456&isForceNew=false  ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/getToken","QueryString":"?username=%D7%9E%D7%95%D7%A8%D7%94107&password=123456&isForceNew=false","HostingRequestStartingLog":"Request starting HTTP/1.1 OPTIONS http://localhost:30796/api/token/getToken?username=%D7%9E%D7%95%D7%A8%D7%94107&password=123456&isForceNew=false  ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMUI97I1N:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1N"}
{"@t":"2020-02-12T12:32:40.6037494Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFMUI97I1N:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1N"}
{"@t":"2020-02-12T12:32:40.6066363Z","@m":"Request finished in 7.4543ms 204 ","@i":"791a596a","ElapsedMilliseconds":7.4543,"StatusCode":204,"ContentType":null,"HostingRequestFinishedLog":"Request finished in 7.4543ms 204 ","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMUI97I1N:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1N"}
{"@t":"2020-02-12T12:32:40.6118127Z","@m":"Request starting HTTP/1.1 GET http://localhost:30796/api/token/getToken?username=%D7%9E%D7%95%D7%A8%D7%94107&password=123456&isForceNew=false application/json ","@i":"ca22a1cb","Protocol":"HTTP/1.1","Method":"GET","ContentType":"application/json","ContentLength":null,"Scheme":"http","Host":"localhost:30796","PathBase":"","Path":"/api/token/getToken","QueryString":"?username=%D7%9E%D7%95%D7%A8%D7%94107&password=123456&isForceNew=false","HostingRequestStartingLog":"Request starting HTTP/1.1 GET http://localhost:30796/api/token/getToken?username=%D7%9E%D7%95%D7%A8%D7%94107&password=123456&isForceNew=false application/json ","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:40.6136126Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:40.6244565Z","@m":"Executing endpoint '\"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)\"'","@i":"500cc934","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:40.6589967Z","@m":"Route matched with \"{action = \\\"GetToken\\\", controller = \\\"Token\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetToken(JwtWebTokenSerice.Entities.User)\" on controller \"JwtWebTokenSerice.Controllers.TokenController\" (\"JsonWebTokenServer\").","@i":"122b2fdf","RouteData":"{action = \"GetToken\", controller = \"Token\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetToken(JwtWebTokenSerice.Entities.User)","Controller":"JwtWebTokenSerice.Controllers.TokenController","AssemblyName":"JsonWebTokenServer","EventId":{"Id":3},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"02c835bd-3a5a-4799-9455-8f3ed641f845","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:40.6626204Z","@m":"CORS policy execution successful.","@i":"5409d6ef","EventId":{"Id":4},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","ActionId":"02c835bd-3a5a-4799-9455-8f3ed641f845","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:40.8639944Z","@m":"Executing action method \"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)\" - Validation state: Valid","@i":"dad538d7","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","ValidationState":"Valid","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"02c835bd-3a5a-4799-9455-8f3ed641f845","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:42.3583028Z","@m":"The property '\"Id\"' on entity type '\"ActivityCheckType\"' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@i":"316a401d","@l":"Warning","property":"Id","entityType":"ActivityCheckType","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"02c835bd-3a5a-4799-9455-8f3ed641f845","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:42.3599798Z","@m":"The property '\"Id\"' on entity type '\"ActivityType\"' is of type 'byte', but is set up to use a SQL Server identity column. This requires that values starting at 255 and counting down will be used for temporary key values. A temporary key value is needed for every entity inserted in a single call to 'SaveChanges'. Care must be taken that these values do not collide with real key values.","@i":"316a401d","@l":"Warning","property":"Id","entityType":"ActivityType","EventId":{"Id":30001,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.ByteIdentityColumnWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation","ActionId":"02c835bd-3a5a-4799-9455-8f3ed641f845","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:42.4047209Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WizdiContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WizdiContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"02c835bd-3a5a-4799-9455-8f3ed641f845","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:42.7187347Z","@m":"Executed DbCommand (\"94\"ms) [Parameters=[\"@__UserName_0='?' (Size = 50), @__Password_1='?' (Size = 512)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [x].[ID], [x].[AboutMySelf], [x].[Age], [x].[AvatarUrl], [x].[BirthDate], [x].[City], [x].[CountryID], [x].[CreateDate], [x].[CreditBalance], [x].[CurrentPackID], [x].[CurrentStorage], [x].[DeleteDate], [x].[Description], [x].[DisableAccountByUser], [x].[EduSub], [x].[EduUser], [x].[Email], [x].[EmailNews], [x].[EmailPartners], [x].[EmailSellings], [x].[EmailUpdated], [x].[FaildLoginAttempts], [x].[FavoriteQuote], [x].[FirstName], [x].[Gender], [x].[InternalComment], [x].[IsActive], [x].[LastName], [x].[LegalIdendifier], [x].[LockedUser], [x].[LUserType], [x].[MaxStorage], [x].[MobileNumber], [x].[PackExpirationDate], [x].[Password], [x].[PayPalEmail], [x].[PhoneID], [x].[PreferredFieldOfKnowledgeID], [x].[Rank], [x].[ShortDesc], [x].[StateID], [x].[UpdateDate], [x].[UserMustChangePassword], [x].[Username], [x.LuserTypeNavigation].[ID], [x.LuserTypeNavigation].[Const], [x.LuserTypeNavigation].[CreateDate], [x.LuserTypeNavigation].[DeleteDate], [x.LuserTypeNavigation].[Description], [x.LuserTypeNavigation].[IsActive], [x.LuserTypeNavigation].[LookupOrder], [x.LuserTypeNavigation].[LookupTypeID], [x.LuserTypeNavigation].[UpdateDate], [x.LuserTypeNavigation].[Value]\r\nFROM [User] AS [x]\r\nLEFT JOIN [LookupValue] AS [x.LuserTypeNavigation] ON [x].[LUserType] = [x.LuserTypeNavigation].[ID]\r\nWHERE (((([x].[Username] = @__UserName_0) AND ([x].[Password] = @__Password_1)) AND ([x].[IsActive] = 1)) AND ([x].[LockedUser] = 0)) AND [x].[DeleteDate] IS NULL\"","@i":"0723d8ff","elapsed":"94","parameters":"@__UserName_0='?' (Size = 50), @__Password_1='?' (Size = 512)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT TOP(1) [x].[ID], [x].[AboutMySelf], [x].[Age], [x].[AvatarUrl], [x].[BirthDate], [x].[City], [x].[CountryID], [x].[CreateDate], [x].[CreditBalance], [x].[CurrentPackID], [x].[CurrentStorage], [x].[DeleteDate], [x].[Description], [x].[DisableAccountByUser], [x].[EduSub], [x].[EduUser], [x].[Email], [x].[EmailNews], [x].[EmailPartners], [x].[EmailSellings], [x].[EmailUpdated], [x].[FaildLoginAttempts], [x].[FavoriteQuote], [x].[FirstName], [x].[Gender], [x].[InternalComment], [x].[IsActive], [x].[LastName], [x].[LegalIdendifier], [x].[LockedUser], [x].[LUserType], [x].[MaxStorage], [x].[MobileNumber], [x].[PackExpirationDate], [x].[Password], [x].[PayPalEmail], [x].[PhoneID], [x].[PreferredFieldOfKnowledgeID], [x].[Rank], [x].[ShortDesc], [x].[StateID], [x].[UpdateDate], [x].[UserMustChangePassword], [x].[Username], [x.LuserTypeNavigation].[ID], [x.LuserTypeNavigation].[Const], [x.LuserTypeNavigation].[CreateDate], [x.LuserTypeNavigation].[DeleteDate], [x.LuserTypeNavigation].[Description], [x.LuserTypeNavigation].[IsActive], [x.LuserTypeNavigation].[LookupOrder], [x.LuserTypeNavigation].[LookupTypeID], [x.LuserTypeNavigation].[UpdateDate], [x.LuserTypeNavigation].[Value]\r\nFROM [User] AS [x]\r\nLEFT JOIN [LookupValue] AS [x.LuserTypeNavigation] ON [x].[LUserType] = [x.LuserTypeNavigation].[ID]\r\nWHERE (((([x].[Username] = @__UserName_0) AND ([x].[Password] = @__Password_1)) AND ([x].[IsActive] = 1)) AND ([x].[LockedUser] = 0)) AND [x].[DeleteDate] IS NULL","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"02c835bd-3a5a-4799-9455-8f3ed641f845","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:42.9098195Z","@m":"Entity Framework Core \"2.2.6-servicing-10079\" initialized '\"WebTokenIdentityContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\"","@i":"9958f5bb","version":"2.2.6-servicing-10079","contextType":"WebTokenIdentityContext","provider":"Microsoft.EntityFrameworkCore.SqlServer","options":"None","EventId":{"Id":10403,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.ContextInitialized"},"SourceContext":"Microsoft.EntityFrameworkCore.Infrastructure","ActionId":"02c835bd-3a5a-4799-9455-8f3ed641f845","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:42.9373720Z","@m":"Executed DbCommand (\"3\"ms) [Parameters=[\"@__userId_0='?' (DbType = Int64)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [x].[Id], [x].[Audience], [x].[BrowserCapabilities], [x].[CreatedDate], [x].[DeletedDate], [x].[ExpirationDate], [x].[IP], [x].[Issuer], [x].[SecurityTypeId], [x].[SystemName], [x].[TokenKey], [x].[UserId], [x].[UserRole]\r\nFROM [Token] AS [x]\r\nWHERE (([x].[UserId] = @__userId_0) AND ([x].[ExpirationDate] >= GETUTCDATE())) AND [x].[DeletedDate] IS NULL\"","@i":"0723d8ff","elapsed":"3","parameters":"@__userId_0='?' (DbType = Int64)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT TOP(1) [x].[Id], [x].[Audience], [x].[BrowserCapabilities], [x].[CreatedDate], [x].[DeletedDate], [x].[ExpirationDate], [x].[IP], [x].[Issuer], [x].[SecurityTypeId], [x].[SystemName], [x].[TokenKey], [x].[UserId], [x].[UserRole]\r\nFROM [Token] AS [x]\r\nWHERE (([x].[UserId] = @__userId_0) AND ([x].[ExpirationDate] >= GETUTCDATE())) AND [x].[DeletedDate] IS NULL","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"02c835bd-3a5a-4799-9455-8f3ed641f845","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:42.9529723Z","@m":"Executed action method \"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)\", returned result \"Microsoft.AspNetCore.Mvc.OkObjectResult\" in 2084.4354ms.","@i":"50a9e262","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","ActionResult":"Microsoft.AspNetCore.Mvc.OkObjectResult","ElapsedMilliseconds":2084.4354000000003,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"02c835bd-3a5a-4799-9455-8f3ed641f845","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:42.9623816Z","@m":"Executing ObjectResult, writing value of type '\"<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]\"'.","@i":"8a1b66c8","Type":"<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"02c835bd-3a5a-4799-9455-8f3ed641f845","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:43.0132348Z","@m":"Executed action \"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)\" in 2349.9549ms","@i":"afa2e885","ActionName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","ElapsedMilliseconds":2349.9549,"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker","ActionId":"02c835bd-3a5a-4799-9455-8f3ed641f845","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:43.0159333Z","@m":"Executed endpoint '\"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)\"'","@i":"99874f2b","EndpointName":"JwtWebTokenSerice.Controllers.TokenController.GetToken (JsonWebTokenServer)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
{"@t":"2020-02-12T12:32:43.0254555Z","@m":"Request finished in 2413.1715ms 200 application/json; charset=utf-8","@i":"791a596a","ElapsedMilliseconds":2413.1715,"StatusCode":200,"ContentType":"application/json; charset=utf-8","HostingRequestFinishedLog":"Request finished in 2413.1715ms 200 application/json; charset=utf-8","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Internal.WebHost","RequestId":"0HLTFMUI97I1O:00000002","RequestPath":"/api/token/getToken","CorrelationId":null,"ConnectionId":"0HLTFMUI97I1O"}
